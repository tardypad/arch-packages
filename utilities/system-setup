#!/bin/sh

init_variables() {
  COMMAND=${0##*/}
}

usage() {
  cat <<- EOF
	usage: ${COMMAND} [<options>]

	Setup a new system after basic Arch installation

	Needs to be run from the repository root as a root user

	Options:
	  -h,  --help    show this message only
	EOF
}

error() {
  [ -z "$1" ] || echo "${COMMAND}: $1"
  echo "Try '${COMMAND} --help' for more information."
  exit 1
} >&2

check_root_user() {
  [ "$( id -u )" -ne 0 ] && error 'The script must be run as root'
}

update_current_packages() {
  pacman -Syu --noconfirm
}

setup_repositories() {
  # set own repo HTTP credentials
  echo 'Enter pkgs.tardypad.me HTTP credentials'
  printf 'username: '; read -r USERNAME
  printf 'password: '; read -r PASSWORD

  # reuse pacman config from system-config package
  mkdir -p /etc/pacmand.d/
  cp builds/system-config/etc-pacman /etc/pacman.conf
  sed -e "s/{USERNAME}/${USERNAME}/" -e "s/{PASSWORD}/${PASSWORD}/" \
    builds/system-config/etc-pacman-aur > /etc/pacman.d/aur
  sed -e "s/{USERNAME}/${USERNAME}/" -e "s/{PASSWORD}/${PASSWORD}/" \
    builds/system-config/etc-pacman-tardypad > /etc/pacman.d/tardypad
  chmod 644 /etc/pacman.conf /etc/pacman.d/aur /etc/pacman.d/tardypad
}

install_packages() {
  PACKAGES=$(
    cut -d' ' -f1 lists/* \
      | grep -v -E 'system-config|dotfiles-git'
  )

  pacman -Sy --noconfirm ${PACKAGES}
  pacman -S --noconfirm --overwrite '*' system-config dotfiles-git
}

system_setup() {
  update_current_packages
  setup_repositories
  install_packages
}

parse_options() {
  while [ "$#" -gt 0 ]; do
    case "$1" in
      -h|--help)
        usage
        exit 0
        ;;
      *)
        error "Invalid option '$1'"
        ;;
    esac
  done
}

init_variables
parse_options "$@"

check_root_user
system_setup
