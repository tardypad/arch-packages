#!/usr/bin/env bash
# Needs to be in bash since it's the shell installed by default on Arch

COMMAND=$( basename $0 )


usage() {
  cat << EOF
usage: ${COMMAND} [<options>]

Setup a new system after basic Arch installation

Needs to be run from the repository root as a root user

Options:
  -h,  --help    show this message only
EOF
}


error() {
  [[ -z "$1" ]] || echo "${COMMAND}: $1"
  echo "Try '${COMMAND} --help' for more information."
  exit 1
} >&2


check_root_user() {
  [[ $( id -u ) -ne 0 ]] && error 'The script must be run as root'
}

update_current_packages() {
  pacman --sync --refresh --sysupgrade --noconfirm
}

setup_repositories() {
  # reuse pacman config from system-config package
  install -Dm0644 builds/system-config/etc-pacman /etc/pacman.conf
  install -Dm0644 builds/system-config/etc-pacman-aur /etc/pacman.d/aur
  install -Dm0644 builds/system-config/etc-pacman-tardypad /etc/pacman.d/tardypad

  # set own repo HTTP credentials
  echo 'Enter pkgs.tardypad.me HTTP credentials'
  read -p 'username: ' username
  read -p 'password: ' password
  sed -i "s/{USERNAME}/${username}/" /etc/pacman.d/{aur,tardypad}
  sed -i "s/{PASSWORD}/${password}/" /etc/pacman.d/{aur,tardypad}
}

install_packages() {
  local packages=$(
    cut --delimiter ' ' --fields 1 lists/* \
      | grep --invert-match --extended-regexp 'system-config|dotfiles-git'
  )

  pacman --sync --refresh --noconfirm ${packages}
  pacman --sync --noconfirm --overwrite '*' system-config dotfiles-git
}


system_setup() {
  update_current_packages
  setup_repositories
  install_packages
}


parse_options() {
  while [[ "$#" -gt 0 ]]; do
    case "$1" in
      -h|--help)
        usage
        exit 0
        ;;
      *)
        error "Invalid option '$1'"
        ;;
    esac
  done
}


parse_options "$@"

check_root_user
system_setup
